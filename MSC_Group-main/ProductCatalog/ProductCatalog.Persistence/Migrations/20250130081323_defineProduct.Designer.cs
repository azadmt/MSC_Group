// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalog.Persistence;

#nullable disable

namespace ProductCatalog.Persistence.Migrations
{
    [DbContext(typeof(ProductCatalogDbContext))]
    [Migration("20250130081323_defineProduct")]
    partial class defineProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProductCatalog.Domain.ProductAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("ProductAggregate");
                });

            modelBuilder.Entity("ProductCatalog.Domain.ProductAggregate", b =>
                {
                    b.OwnsOne("ProductCatalog.Domain.Color", "Color", b1 =>
                        {
                            b1.Property<Guid>("ProductAggregateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<byte>("Blue")
                                .HasColumnType("tinyint");

                            b1.Property<byte>("Green")
                                .HasColumnType("tinyint");

                            b1.Property<byte>("Red")
                                .HasColumnType("tinyint");

                            b1.HasKey("ProductAggregateId");

                            b1.ToTable("ProductAggregate");

                            b1.WithOwner()
                                .HasForeignKey("ProductAggregateId");
                        });

                    b.OwnsOne("ProductCatalog.Domain.CountryCode", "CountryCode", b1 =>
                        {
                            b1.Property<Guid>("ProductAggregateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductAggregateId");

                            b1.ToTable("ProductAggregate");

                            b1.WithOwner()
                                .HasForeignKey("ProductAggregateId");
                        });

                    b.OwnsOne("ProductCatalog.Domain.Money", "Price", b1 =>
                        {
                            b1.Property<Guid>("ProductAggregateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ProductAggregateId");

                            b1.ToTable("ProductAggregate");

                            b1.WithOwner()
                                .HasForeignKey("ProductAggregateId");
                        });

                    b.OwnsOne("ProductCatalog.Domain.ProductCode", "Code", b1 =>
                        {
                            b1.Property<Guid>("ProductAggregateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductAggregateId");

                            b1.ToTable("ProductAggregate");

                            b1.WithOwner()
                                .HasForeignKey("ProductAggregateId");
                        });

                    b.Navigation("Code")
                        .IsRequired();

                    b.Navigation("Color")
                        .IsRequired();

                    b.Navigation("CountryCode")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
